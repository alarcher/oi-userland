diff --git a/src/liballoc_jemalloc/build.rs b/src/liballoc_jemalloc/build.rs
index ae040a2..2645383 100644
--- a/src/liballoc_jemalloc/build.rs
+++ b/src/liballoc_jemalloc/build.rs
@@ -63,7 +63,7 @@ fn main() {
         _ => return,
     };
 
-    let compiler = gcc::Config::new().get_compiler();
+    let compiler = gcc::Build::new().get_compiler();
     // only msvc returns None for ar so unwrap is okay
     let ar = build_helper::cc2ar(compiler.path(), &target).unwrap();
     let cflags = compiler.args()
@@ -167,7 +167,7 @@ fn main() {
     // sure the symbols are available.
     if target.contains("androideabi") {
         println!("cargo:rerun-if-changed=pthread_atfork_dummy.c");
-        gcc::Config::new()
+        gcc::Build::new()
             .flag("-fvisibility=hidden")
             .file("pthread_atfork_dummy.c")
             .compile("libpthread_atfork_dummy.a");
diff --git a/src/libflate/build.rs b/src/libflate/build.rs
index 78d2ef1..e77b3d0 100644
--- a/src/libflate/build.rs
+++ b/src/libflate/build.rs
@@ -12,7 +12,7 @@ extern crate gcc;
 
 fn main() {
     println!("cargo:rerun-if-changed=../rt/miniz.c");
-    gcc::Config::new()
+    gcc::Build::new()
         .file("../rt/miniz.c")
         .compile("libminiz.a");
 }
diff --git a/src/librustc_llvm/build.rs b/src/librustc_llvm/build.rs
index b74bccb..71c252b 100644
--- a/src/librustc_llvm/build.rs
+++ b/src/librustc_llvm/build.rs
@@ -125,7 +125,7 @@ fn main() {
     let mut cmd = Command::new(&llvm_config);
     cmd.arg("--cxxflags");
     let cxxflags = output(&mut cmd);
-    let mut cfg = gcc::Config::new();
+    let mut cfg = gcc::Build::new();
     for flag in cxxflags.split_whitespace() {
         // Ignore flags like `-m64` when we're doing a cross build
         if is_crossed && flag.starts_with("-m") {
diff --git a/src/librustdoc/build.rs b/src/librustdoc/build.rs
index 9fa6406..d13afc4 100644
--- a/src/librustdoc/build.rs
+++ b/src/librustdoc/build.rs
@@ -14,7 +14,7 @@ extern crate gcc;
 fn main() {
     let src_dir = std::path::Path::new("../rt/hoedown/src");
     build_helper::rerun_if_changed_anything_in_dir(src_dir);
-    let mut cfg = gcc::Config::new();
+    let mut cfg = gcc::Build::new();
     cfg.file("../rt/hoedown/src/autolink.c")
        .file("../rt/hoedown/src/buffer.c")
        .file("../rt/hoedown/src/document.c")
